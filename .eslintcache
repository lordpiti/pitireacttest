[{"C:\\Repos\\football-react\\src\\index.tsx":"1","C:\\Repos\\football-react\\src\\App.tsx":"2","C:\\Repos\\football-react\\src\\i18n.ts":"3","C:\\Repos\\football-react\\src\\Football\\Football.tsx":"4","C:\\Repos\\football-react\\src\\Football\\store\\middleware\\loggerMIddleware.ts":"5","C:\\Repos\\football-react\\src\\Football\\Competitions\\Competitions.tsx":"6","C:\\Repos\\football-react\\src\\Football\\components\\AppBar\\AppBar.tsx":"7","C:\\Repos\\football-react\\src\\Football\\store\\sagas\\index.ts":"8","C:\\Repos\\football-react\\src\\Football\\store\\reducers\\global.ts":"9","C:\\Repos\\football-react\\src\\Football\\services\\globalService.ts":"10","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionDetails\\CompetitionDetailsHooks.tsx":"11","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamDetails\\TeamDetails.tsx":"12","C:\\Repos\\football-react\\src\\Football\\components\\AppBar\\GoogleAuthenticator\\GoogleAuthenticator.tsx":"13","C:\\Repos\\football-react\\src\\Football\\store\\actions\\globalActions.ts":"14","C:\\Repos\\football-react\\src\\Football\\components\\LanguageSelector\\LanguageSelector.tsx":"15","C:\\Repos\\football-react\\src\\Football\\store\\actions\\playersActions.ts":"16","C:\\Repos\\football-react\\src\\Football\\components\\RSSReader\\ReaderCard\\ReaderCard.tsx":"17","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamNews\\TeamNews.tsx":"18","C:\\Repos\\football-react\\src\\Football\\components\\TableWithPagination\\TableWithFilteringAndPagination.tsx":"19","C:\\Repos\\football-react\\src\\Football\\components\\Sunburst\\Sunburst.tsx":"20","C:\\Repos\\football-react\\src\\Football\\utilities\\FormValidator.js":"21","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamInfo\\EditTeam\\EditTeam.tsx":"22","C:\\Repos\\football-react\\src\\Football\\utilities\\colourUtilities.ts":"23","C:\\Repos\\football-react\\src\\Football\\components\\EditModal\\editModal.tsx":"24","C:\\Repos\\football-react\\src\\Football\\Players\\PlayerInfo\\EditPlayer\\EditPlayer.tsx":"25","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionStatistics\\CompetitionStatistics.tsx":"26","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionRounds\\CompetitionRounds.tsx":"27","C:\\Repos\\football-react\\src\\Football\\utilities\\helpers.ts":"28","C:\\Repos\\football-react\\src\\Football\\Competitions\\Match\\MatchPlayers\\MatchPlayers.tsx":"29","C:\\Repos\\football-react\\src\\Football\\Competitions\\Match\\MatchStatistics\\MatchStatistics.tsx":"30","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionRounds\\ScorersTable\\ScorersTable.tsx":"31","C:\\Repos\\football-react\\src\\Football\\Players\\PlayerStatistics\\ExpansionPanel\\SingleGamePlayed\\SingleGamePlayed.tsx":"32","C:\\Repos\\football-react\\src\\registerServiceWorker.js":"33","C:\\Repos\\football-react\\src\\Football\\store\\middleware\\thunkMiddleware.ts":"34","C:\\Repos\\football-react\\src\\Football\\Players\\Players.tsx":"35","C:\\Repos\\football-react\\src\\Football\\components\\CustomSnackbar\\CustomSnackbar.tsx":"36","C:\\Repos\\football-react\\src\\Football\\components\\GraphicDemo\\GraphicDemo.tsx":"37","C:\\Repos\\football-react\\src\\Football\\store\\reducers\\teams.ts":"38","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionSimulation\\CompetitionSimulation.tsx":"39","C:\\Repos\\football-react\\src\\Football\\components\\RSSReader\\RSSReader.tsx":"40","C:\\Repos\\football-react\\src\\Football\\components\\SunburstBundle\\SunburstBundle.tsx":"41","C:\\Repos\\football-react\\src\\Football\\store\\actions\\actionTypes.ts":"42","C:\\Repos\\football-react\\src\\Football\\utilities\\axios-test.ts":"43","C:\\Repos\\football-react\\src\\Football\\store\\actions\\competitionsActions.ts":"44","C:\\Repos\\football-react\\src\\Football\\Players\\PlayerStatistics\\PlayerStatistics.tsx":"45","C:\\Repos\\football-react\\src\\Football\\services\\teamsService.ts":"46","C:\\Repos\\football-react\\src\\Football\\components\\Bundle\\Bundle.tsx":"47","C:\\Repos\\football-react\\src\\Football\\utilities\\formatters.ts":"48","C:\\Repos\\football-react\\src\\Football\\components\\TableWithPagination\\TablePaginationActions\\TablePaginationActions.tsx":"49","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamSquad\\SimpleCard\\SimpleCard.tsx":"50","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionDraw\\CompetitionDrawMatch\\CompetitionDrawMatch.tsx":"51","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionRounds\\MatchList\\MatchList.tsx":"52","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionInfo\\EditCompetitionHooks\\EditCompetitionHooks.tsx":"53","C:\\Repos\\football-react\\src\\Football\\store\\middleware\\sagasMiddleware.ts":"54","C:\\Repos\\football-react\\src\\Football\\services\\competitionsService.ts":"55","C:\\Repos\\football-react\\src\\Football\\Players\\PlayersOverview\\PlayersOverview.tsx":"56","C:\\Repos\\football-react\\src\\Football\\Players\\PlayerInfo\\PlayerInfo.tsx":"57","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamSquad\\TeamSquad.tsx":"58","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionSimulation\\CompetitionSimulationMatch\\CompetitionSimulationMatch.tsx":"59","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionDraw\\CompetitionDraw.tsx":"60","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamStadium\\MyGoogleMaps\\MyGoogleMaps.jsx":"61","C:\\Repos\\football-react\\src\\Football\\utilities\\nest.ts":"62","C:\\Repos\\football-react\\src\\Football\\Home\\Home.tsx":"63","C:\\Repos\\football-react\\src\\Football\\store\\sagas\\teams.ts":"64","C:\\Repos\\football-react\\src\\Football\\Teams\\ComplexForm\\ComplexForm.jsx":"65","C:\\Repos\\football-react\\src\\Football\\components\\RoleVisibleComponent\\RoleVisibleComponent.tsx":"66","C:\\Repos\\football-react\\src\\Football\\Players\\PlayerStatistics\\ExpansionPanel\\ExpansionPanel.tsx":"67","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamInfo\\TeamInfo.tsx":"68","C:\\Repos\\football-react\\src\\Football\\store\\reducers\\competitions.ts":"69","C:\\Repos\\football-react\\src\\Football\\Competitions\\Match\\Match.tsx":"70","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionRounds\\TableLeague\\TableLeague.tsx":"71","C:\\Repos\\football-react\\src\\Football\\components\\BasicDropzone\\BasicDropzone.tsx":"72","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionStatistics\\CompetitionEvolution\\CompetitionEvolution.tsx":"73","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamStadium\\TeamStadium.tsx":"74","C:\\Repos\\football-react\\src\\Football\\components\\RoleVisibleComponent\\RoleVisibleWrapper.tsx":"75","C:\\Repos\\football-react\\src\\Football\\store\\index.ts":"76","C:\\Repos\\football-react\\src\\Football\\store\\reducers.ts":"77","C:\\Repos\\football-react\\src\\Football\\store\\reducers\\players.ts":"78","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamsOverview\\TeamsOverview.tsx":"79","C:\\Repos\\football-react\\src\\Football\\store\\actions\\teamsActions.ts":"80","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionSimulation\\CompetitionSimulationMatch\\CompetitionSimulationMatchEvent\\CompetitionSimulationMatchEvent.tsx":"81","C:\\Repos\\football-react\\src\\Football\\Competitions\\Match\\MatchPlayers\\MatchPlayerSingle\\MatchPlayerSingle.tsx":"82","C:\\Repos\\football-react\\src\\Football\\Teams\\Teams.tsx":"83","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionsOverview\\CompetitionsOverview.tsx":"84","C:\\Repos\\football-react\\src\\Football\\components\\AppBar\\FacebookAuthenticator\\FacebookAuthenticator.tsx":"85","C:\\Repos\\football-react\\src\\Football\\services\\playersService.ts":"86","C:\\Repos\\football-react\\src\\Football\\components\\Countdown\\Countdown.tsx":"87","C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionInfo\\CompetitionInfo.tsx":"88","C:\\Repos\\football-react\\src\\Football\\Players\\PlayerDetails\\PlayerDetails.tsx":"89","C:\\Repos\\football-react\\src\\Football\\components\\SideMenu\\SideMenu.tsx":"90"},{"size":610,"mtime":1599584676487,"results":"91","hashOfConfig":"92"},{"size":803,"mtime":1599182617810,"results":"93","hashOfConfig":"92"},{"size":620,"mtime":1592956412167,"results":"94","hashOfConfig":"92"},{"size":4358,"mtime":1599585862680,"results":"95","hashOfConfig":"92"},{"size":393,"mtime":1600628792102,"results":"96","hashOfConfig":"97"},{"size":868,"mtime":1595333893183,"results":"98","hashOfConfig":"99"},{"size":3834,"mtime":1603655634956,"results":"100","hashOfConfig":"92"},{"size":441,"mtime":1589663969866,"results":"101","hashOfConfig":"92"},{"size":1118,"mtime":1599314947455,"results":"102","hashOfConfig":"92"},{"size":350,"mtime":1589654994589,"results":"103","hashOfConfig":"92"},{"size":4417,"mtime":1599585514329,"results":"104","hashOfConfig":"92"},{"size":4194,"mtime":1600961300073,"results":"105","hashOfConfig":"92"},{"size":3217,"mtime":1606527331263,"results":"106","hashOfConfig":"92"},{"size":507,"mtime":1589663006691,"results":"107","hashOfConfig":"92"},{"size":1887,"mtime":1593395124945,"results":"108","hashOfConfig":"92"},{"size":3126,"mtime":1600956818410,"results":"109","hashOfConfig":"92"},{"size":2309,"mtime":1592956412160,"results":"110","hashOfConfig":"92"},{"size":2120,"mtime":1606572154957,"results":"111","hashOfConfig":"92"},{"size":2355,"mtime":1589725844028,"results":"112","hashOfConfig":"92"},{"size":3748,"mtime":1589307577198,"results":"113","hashOfConfig":"92"},{"size":1729,"mtime":1551137984496,"results":"114","hashOfConfig":"97"},{"size":4562,"mtime":1606572142309,"results":"115","hashOfConfig":"92"},{"size":193,"mtime":1589307577254,"results":"116","hashOfConfig":"92"},{"size":1842,"mtime":1589593546342,"results":"117","hashOfConfig":"92"},{"size":9397,"mtime":1606572103463,"results":"118","hashOfConfig":"92"},{"size":3800,"mtime":1606571811938,"results":"119","hashOfConfig":"120"},{"size":4763,"mtime":1606571636237,"results":"121","hashOfConfig":"120"},{"size":615,"mtime":1606572344860,"results":"122","hashOfConfig":"92"},{"size":830,"mtime":1588519821878,"results":"123","hashOfConfig":"92"},{"size":1565,"mtime":1588622743632,"results":"124","hashOfConfig":"92"},{"size":6468,"mtime":1599182617811,"results":"125","hashOfConfig":"92"},{"size":992,"mtime":1588519822020,"results":"126","hashOfConfig":"120"},{"size":4501,"mtime":1538949933498,"results":"127","hashOfConfig":"99"},{"size":1203,"mtime":1600962101661,"results":"128","hashOfConfig":"99"},{"size":590,"mtime":1592956412076,"results":"129","hashOfConfig":"99"},{"size":4569,"mtime":1600956599562,"results":"130","hashOfConfig":"92"},{"size":1127,"mtime":1589307577182,"results":"131","hashOfConfig":"92"},{"size":879,"mtime":1600960092185,"results":"132","hashOfConfig":"92"},{"size":4814,"mtime":1606572061460,"results":"133","hashOfConfig":"92"},{"size":641,"mtime":1592956412157,"results":"134","hashOfConfig":"92"},{"size":4018,"mtime":1589307577231,"results":"135","hashOfConfig":"92"},{"size":4146,"mtime":1600961272342,"results":"136","hashOfConfig":"99"},{"size":1019,"mtime":1589649992959,"results":"137","hashOfConfig":"92"},{"size":5994,"mtime":1600956782967,"results":"138","hashOfConfig":"92"},{"size":2496,"mtime":1606572122169,"results":"139","hashOfConfig":"92"},{"size":824,"mtime":1593164445945,"results":"140","hashOfConfig":"92"},{"size":8688,"mtime":1589307577171,"results":"141","hashOfConfig":"92"},{"size":469,"mtime":1588295348226,"results":"142","hashOfConfig":"99"},{"size":2845,"mtime":1589725141245,"results":"143","hashOfConfig":"92"},{"size":2448,"mtime":1593395034707,"results":"144","hashOfConfig":"92"},{"size":2027,"mtime":1594559356985,"results":"145","hashOfConfig":"92"},{"size":1487,"mtime":1588637752323,"results":"146","hashOfConfig":"92"},{"size":5352,"mtime":1606571666126,"results":"147","hashOfConfig":"92"},{"size":404,"mtime":1600962030199,"results":"148","hashOfConfig":"99"},{"size":1375,"mtime":1594244379916,"results":"149","hashOfConfig":"120"},{"size":2845,"mtime":1600956689128,"results":"150","hashOfConfig":"92"},{"size":2693,"mtime":1600956660177,"results":"151","hashOfConfig":"92"},{"size":605,"mtime":1588383412113,"results":"152","hashOfConfig":"97"},{"size":2803,"mtime":1592956412064,"results":"153","hashOfConfig":"92"},{"size":7930,"mtime":1600956291201,"results":"154","hashOfConfig":"92"},{"size":1160,"mtime":1548360388773,"results":"155","hashOfConfig":"92"},{"size":1944,"mtime":1589307577258,"results":"156","hashOfConfig":"92"},{"size":1109,"mtime":1592956412072,"results":"157","hashOfConfig":"92"},{"size":2576,"mtime":1600960966105,"results":"158","hashOfConfig":"92"},{"size":5904,"mtime":1548360388761,"results":"159","hashOfConfig":"92"},{"size":1073,"mtime":1599182617816,"results":"160","hashOfConfig":"92"},{"size":2110,"mtime":1593395702117,"results":"161","hashOfConfig":"92"},{"size":2231,"mtime":1600961472830,"results":"162","hashOfConfig":"92"},{"size":3805,"mtime":1606572214222,"results":"163","hashOfConfig":"92"},{"size":5124,"mtime":1600956566592,"results":"164","hashOfConfig":"92"},{"size":1959,"mtime":1589307577099,"results":"165","hashOfConfig":"92"},{"size":3244,"mtime":1606572166256,"results":"166","hashOfConfig":"92"},{"size":1031,"mtime":1592956412067,"results":"167","hashOfConfig":"92"},{"size":1634,"mtime":1589669118699,"results":"168","hashOfConfig":"92"},{"size":496,"mtime":1588520059541,"results":"169","hashOfConfig":"92"},{"size":1414,"mtime":1600957715456,"results":"170","hashOfConfig":"92"},{"size":415,"mtime":1599585108129,"results":"171","hashOfConfig":"97"},{"size":1523,"mtime":1599315365900,"results":"172","hashOfConfig":"92"},{"size":1677,"mtime":1600961501373,"results":"173","hashOfConfig":"92"},{"size":1146,"mtime":1600961631103,"results":"174","hashOfConfig":"92"},{"size":1141,"mtime":1588387542022,"results":"175","hashOfConfig":"92"},{"size":2155,"mtime":1603458924960,"results":"176","hashOfConfig":"92"},{"size":566,"mtime":1589681138235,"results":"177","hashOfConfig":"92"},{"size":3328,"mtime":1600956459843,"results":"178","hashOfConfig":"92"},{"size":2157,"mtime":1603656980433,"results":"179","hashOfConfig":"92"},{"size":534,"mtime":1589654122379,"results":"180","hashOfConfig":"92"},{"size":3230,"mtime":1603683361130,"results":"181","hashOfConfig":"120"},{"size":2150,"mtime":1606573803718,"results":"182","hashOfConfig":"92"},{"size":4015,"mtime":1600956637795,"results":"183","hashOfConfig":"92"},{"size":1465,"mtime":1603683664032,"results":"184","hashOfConfig":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},"3ll36o",{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7lqayy",{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},"1y14dpy",{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"214"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"192"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fiyhe4",{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"204"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"192"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"204"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"192"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"204"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"333"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"214"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"204"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Repos\\football-react\\src\\index.tsx",[],[],"C:\\Repos\\football-react\\src\\App.tsx",[],"C:\\Repos\\football-react\\src\\i18n.ts",[],[],"C:\\Repos\\football-react\\src\\Football\\Football.tsx",[],"C:\\Repos\\football-react\\src\\Football\\store\\middleware\\loggerMIddleware.ts",["389","390","391","392","393","394","395","396"],"C:\\Repos\\football-react\\src\\Football\\Competitions\\Competitions.tsx",[],[],"C:\\Repos\\football-react\\src\\Football\\components\\AppBar\\AppBar.tsx",[],"C:\\Repos\\football-react\\src\\Football\\store\\sagas\\index.ts",[],[],"C:\\Repos\\football-react\\src\\Football\\store\\reducers\\global.ts",[],"C:\\Repos\\football-react\\src\\Football\\services\\globalService.ts",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionDetails\\CompetitionDetailsHooks.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Teams\\TeamDetails\\TeamDetails.tsx",["397"],"import React, { useEffect } from 'react';\r\nimport { Route, Redirect, RouteComponentProps } from 'react-router-dom';\r\nimport TeamInfo from '../TeamInfo/TeamInfo';\r\nimport ComplexForm from '../ComplexForm/ComplexForm';\r\nimport TeamSquad from '../TeamSquad/TeamSquad';\r\nimport TeamNews from '../TeamNews/TeamNews';\r\nimport SideMenu from '../../components/SideMenu/SideMenu';\r\nimport TeamStadium from '../TeamStadium/TeamStadium';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/teamsActions';\r\nimport { FootballState } from '../../store';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FootballSagasDispatch } from '../../store/middleware/sagasMiddleware';\r\n\r\ninterface TeamsDetailsParams {\r\n  id: string;\r\n}\r\n\r\ninterface TeamsDetailsProps extends RouteComponentProps<TeamsDetailsParams> {\r\n  loadTeam: Function;\r\n  clearTeamData: Function;\r\n  currentTeam: any;\r\n}\r\n\r\nconst TeamDetails = (props: TeamsDetailsProps) => {\r\n  const { loadTeam, clearTeamData, match } = props;\r\n\r\n  useEffect(() => {\r\n    loadTeam(match.params.id);\r\n    //TODO: delete the store when unmounting, on the cleanup\r\n\r\n    return function cleanup() {\r\n      clearTeamData();\r\n    };\r\n  }, []);\r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  let content,\r\n    menuContent = null;\r\n\r\n  if (props.currentTeam) {\r\n    menuContent = (\r\n      <div className='margin-bottom-medium'>\r\n        <img\r\n          src={props.currentTeam.pictureLogo.url}\r\n          className='roundedImage'\r\n          height='50'\r\n          width='50'\r\n          alt=''\r\n        />\r\n        <span>{props.currentTeam.name}</span>\r\n      </div>\r\n    );\r\n    content = (\r\n      <div>\r\n        <Route\r\n          path={props.match.url + '/'}\r\n          exact\r\n          render={() => <Redirect to={props.match.url + '/news'} />}\r\n        />\r\n        <Route\r\n          path={props.match.url + '/overview'}\r\n          component={() => {\r\n            return <TeamInfo teamData={props.currentTeam}></TeamInfo>;\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          path={props.match.url + '/news'}\r\n          render={() => {\r\n            return <TeamNews teamData={props.currentTeam}></TeamNews>;\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          path={props.match.url + '/team-squad'}\r\n          render={() => {\r\n            return (\r\n              <TeamSquad players={props.currentTeam.playerList}></TeamSquad>\r\n            );\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          path={props.match.url + '/team-stadium'}\r\n          render={() => {\r\n            return (\r\n              <TeamStadium stadium={props.currentTeam.stadium}></TeamStadium>\r\n            );\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          path={props.match.url + '/complex-form-sample'}\r\n          component={() => {\r\n            return <ComplexForm id={teamId}></ComplexForm>;\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const teamId = props.match.params.id;\r\n\r\n  const menuList = [\r\n    {\r\n      name: t('teams.news'),\r\n      url: props.match.url + '/news',\r\n    },\r\n    {\r\n      name: t('teams.overview'),\r\n      url: props.match.url + '/overview',\r\n    },\r\n    {\r\n      name: t('teams.squad'),\r\n      url: props.match.url + '/team-squad',\r\n    },\r\n    {\r\n      name: t('teams.stadium'),\r\n      url: props.match.url + '/team-stadium',\r\n    },\r\n    // {\r\n    //   name: 'Complex form sample',\r\n    //   url: this.props.match.url + '/complex-form-sample',\r\n    // },\r\n  ];\r\n\r\n  return (\r\n    <div className='Teams'>\r\n      <div className='row'>\r\n        <div className='col-sm-3'>\r\n          <SideMenu itemList={menuList}>{menuContent}</SideMenu>\r\n        </div>\r\n        <div className='col-sm-9'>{content}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: FootballState) => {\r\n  return {\r\n    currentTeam: state.teams.currentTeam,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: FootballSagasDispatch) => {\r\n  return {\r\n    loadTeam: (teamId: number) =>\r\n      dispatch(actionCreators.loadTeamSagas(teamId)),\r\n    clearTeamData: () => dispatch(actionCreators.clearTeamData()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamDetails);\r\n",[],"C:\\Repos\\football-react\\src\\Football\\components\\AppBar\\GoogleAuthenticator\\GoogleAuthenticator.tsx",["398","399","400","401","402"],"C:\\Repos\\football-react\\src\\Football\\store\\actions\\globalActions.ts",[],"C:\\Repos\\football-react\\src\\Football\\components\\LanguageSelector\\LanguageSelector.tsx",[],"C:\\Repos\\football-react\\src\\Football\\store\\actions\\playersActions.ts",["403","404"],"import * as actionTypes from './actionTypes';\r\nimport * as globalActionCreators from './globalActions';\r\nimport Formatters from '../../utilities/formatters';\r\nimport { FootballDispatch, FootballThunk } from '../middleware/thunkMiddleware';\r\n\r\nexport const loadPlayerListSuccessAction = (playerList: any) => {\r\n  return {\r\n    type: actionTypes.LOAD_PLAYER_LIST,\r\n    payload: playerList,\r\n  };\r\n};\r\n\r\nexport const filterPlayerListAction = (filter: any) => {\r\n  return {\r\n    type: actionTypes.FILTER_PLAYER_LIST,\r\n    payload: filter,\r\n  };\r\n};\r\n\r\nexport const loadPlayerSuccessAction = (playerData: any) => {\r\n  return {\r\n    type: actionTypes.LOAD_PLAYER,\r\n    payload: playerData,\r\n  };\r\n};\r\n\r\nexport const savePlayerSuccessAction = (playerData: any) => {\r\n  return {\r\n    type: actionTypes.SAVE_PLAYER,\r\n    payload: playerData,\r\n  };\r\n};\r\n\r\nexport const loadPlayerListAction = (): FootballThunk => {\r\n  return async (dispatch: FootballDispatch, _, { playerService }) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n\r\n    const playersListResponse = await playerService.loadPlayerList();\r\n    const playerList = playersListResponse.data.sort((a: any, b: any) =>\r\n      a.surname < b.surname ? -1 : 1\r\n    );\r\n    dispatch(loadPlayerListSuccessAction(playerList));\r\n    dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n  };\r\n};\r\n\r\nexport const loadPlayerAction = (id: any): FootballThunk => {\r\n  return async (dispatch: FootballDispatch, _, { playerService }) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n\r\n    const { data: playerData } = await playerService.loadPlayer(id);\r\n\r\n    playerData.birthDate = Formatters.formatDateWithDashes(\r\n      playerData.birthDate\r\n    );\r\n    dispatch(loadPlayerSuccessAction(playerData));\r\n    dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n  };\r\n};\r\n\r\nexport const savePlayerAction = (\r\n  image: any,\r\n  playerData: any\r\n): FootballThunk => {\r\n  return async (\r\n    dispatch: FootballDispatch,\r\n    _,\r\n    { playerService, globalService }\r\n  ) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n\r\n    if (!image) {\r\n      const playerResponse = await playerService.savePlayerData(playerData);\r\n\r\n      dispatch(savePlayerSuccessAction(playerData));\r\n      dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n      dispatch(\r\n        globalActionCreators.acToastDashMessage(\r\n          'Player Info has been saved',\r\n          'success'\r\n        )\r\n      ); //success, warning, error or info\r\n    } else {\r\n      const response = await globalService.saveImage(image);\r\n\r\n      const updatedPlayerData = { ...playerData, picture: response.data };\r\n\r\n      const playerResponse = await playerService.savePlayerData(\r\n        updatedPlayerData\r\n      );\r\n\r\n      dispatch(savePlayerSuccessAction(updatedPlayerData));\r\n      dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n      dispatch(\r\n        globalActionCreators.acToastDashMessage(\r\n          'Player Info has been saved',\r\n          'success'\r\n        )\r\n      ); //success, warning, error or info\r\n    }\r\n  };\r\n};\r\n","C:\\Repos\\football-react\\src\\Football\\components\\RSSReader\\ReaderCard\\ReaderCard.tsx",["405"],"C:\\Repos\\football-react\\src\\Football\\Teams\\TeamNews\\TeamNews.tsx",["406"],"import React, { useEffect, useState } from 'react';\r\nimport RSSReader from '../../components/RSSReader/RSSReader';\r\nimport Parser from 'rss-parser';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface TeamNewsProps {\r\n  teamData: any;\r\n}\r\n\r\nconst TeamNews = (props: TeamNewsProps) => {\r\n  const [currentFeedList, setCurrentFeedList] = useState({\r\n    feedList: [] as Parser.Item[] | undefined,\r\n  });\r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const urls = [\r\n      'real-madrid',\r\n      'deportivo',\r\n      'betis',\r\n      'barcelona',\r\n      'sevilla',\r\n      'malaga',\r\n      'mallorca',\r\n      'osasuna',\r\n      'athletic',\r\n      'espanyol',\r\n      'villarreal',\r\n      'atletico',\r\n      'valladolid',\r\n      'sporting',\r\n      'numancia',\r\n      'valencia',\r\n      'almeria',\r\n      'getafe',\r\n    ];\r\n\r\n    // https://stackoverflow.com/questions/56442582/react-hooks-cant-perform-a-react-state-update-on-an-unmounted-component\r\n    let isMounted = false;\r\n    const url = props.teamData.name;\r\n    const replacedName = url.replace(/ /gi, '-').toLowerCase();\r\n\r\n    let foundUrl = urls.find((x) => replacedName.includes(x));\r\n\r\n    if (!foundUrl) {\r\n      foundUrl = 'deportivo';\r\n    }\r\n\r\n    const finalUrl = `https://e00-marca.uecdn.es/rss/futbol/${foundUrl}.xml`;\r\n\r\n    const CORS_PROXY = process.env.REACT_APP_CORS_PROXY;\r\n\r\n    const parser = new Parser({\r\n      customFields: {\r\n        item: [\r\n          ['media:content', 'media:content'],\r\n          ['media:thumbnail', 'media:thumbnail'],\r\n        ],\r\n      },\r\n    });\r\n\r\n    parser.parseURL(CORS_PROXY + finalUrl, (err, feed) => {\r\n      if (feed) {\r\n        if (!isMounted) {\r\n          setCurrentFeedList({\r\n            feedList: feed.items,\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return function cleanup() {\r\n      isMounted = true;\r\n    };\r\n  }, [props.teamData.id]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{t('teams.news')}</h1>\r\n      {currentFeedList.feedList && (\r\n        <RSSReader feedList={currentFeedList.feedList}></RSSReader>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamNews;\r\n","C:\\Repos\\football-react\\src\\Football\\components\\TableWithPagination\\TableWithFilteringAndPagination.tsx",[],"C:\\Repos\\football-react\\src\\Football\\components\\Sunburst\\Sunburst.tsx",[],"C:\\Repos\\football-react\\src\\Football\\utilities\\FormValidator.js",["407","408","409","410"],"import validator from 'validator';\r\n\r\nclass FormValidator {\r\n  constructor(validations) {\r\n    // validations is an array of validation rules specific to a form\r\n    this.validations = validations;\r\n  }\r\n\r\n  validate(state) {\r\n    // start out assuming valid\r\n    let validation = this.valid();\r\n\r\n    // for each validation rule\r\n    this.validations.forEach(rule => {\r\n\r\n      // if the field hasn't already been marked invalid by an earlier rule\r\n      if (!validation[rule.field].isInvalid) {\r\n        // determine the field value, the method to invoke and optional args from \r\n        // the rule definition\r\n        const field_value = state[rule.field].toString();\r\n        const args = rule.args || [];\r\n        const validation_method = \r\n              typeof rule.method === 'string' ?\r\n              validator[rule.method] : \r\n              rule.method\r\n              \r\n        // call the validation_method with the current field value as the first\r\n        // argument, any additional arguments, and the whole state as a final\r\n        // argument.  If the result doesn't match the rule.validWhen property,\r\n        // then modify the validation object for the field and set the isValid\r\n        // field to false\r\n        if(validation_method(field_value, ...args, state) !== rule.validWhen) {\r\n          validation[rule.field] = { isInvalid: true, message: rule.message }\r\n          validation.isValid = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    return validation;\r\n  }\r\n\r\n  valid() {\r\n    const validation = {}\r\n\r\n    this.validations.map(rule => (\r\n      validation[rule.field] = { isInvalid: false, message: '' }\r\n    ));\r\n\r\n    return { isValid: true, ...validation };\r\n  }\r\n}\r\n\r\nexport default FormValidator;",[],"C:\\Repos\\football-react\\src\\Football\\Teams\\TeamInfo\\EditTeam\\EditTeam.tsx",[],"C:\\Repos\\football-react\\src\\Football\\utilities\\colourUtilities.ts",[],"C:\\Repos\\football-react\\src\\Football\\components\\EditModal\\editModal.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Players\\PlayerInfo\\EditPlayer\\EditPlayer.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionStatistics\\CompetitionStatistics.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionRounds\\CompetitionRounds.tsx",[],[],"C:\\Repos\\football-react\\src\\Football\\utilities\\helpers.ts",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\Match\\MatchPlayers\\MatchPlayers.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\Match\\MatchStatistics\\MatchStatistics.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionRounds\\ScorersTable\\ScorersTable.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Players\\PlayerStatistics\\ExpansionPanel\\SingleGamePlayed\\SingleGamePlayed.tsx",["411"],"import React from 'react';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport Formatters from '../../../../utilities/formatters';\r\nimport './SingleGamePlayed.scss';\r\n\r\nexport interface SingleGamePlayedProps extends RouteComponentProps {\r\n  classes: any;\r\n  gamePlayed: any;\r\n}\r\n\r\nconst SingleGamePlayed = (props: SingleGamePlayedProps) => {\r\n  return (\r\n    <Link\r\n      to={`${props.match.url}/player-statistics/match/${props.gamePlayed.id}`}\r\n    >\r\n      <div className='SingleGamePlayed row'>\r\n        <div className='col-sm-2'>{`Round ${props.gamePlayed.round}`}</div>\r\n        <div className='col-sm-2'>\r\n          {Formatters.formatDate(props.gamePlayed.date)}\r\n        </div>\r\n        <div className='col-sm-6 matchTitle'>\r\n          {`${props.gamePlayed.localTeamName} ${props.gamePlayed.localGoals} - ${props.gamePlayed.visitorGoals} ${props.gamePlayed.visitorTeamName}`}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default SingleGamePlayed;\r\n","C:\\Repos\\football-react\\src\\registerServiceWorker.js",[],"C:\\Repos\\football-react\\src\\Football\\store\\middleware\\thunkMiddleware.ts",[],[],"C:\\Repos\\football-react\\src\\Football\\Players\\Players.tsx",[],[],"C:\\Repos\\football-react\\src\\Football\\components\\CustomSnackbar\\CustomSnackbar.tsx",[],"C:\\Repos\\football-react\\src\\Football\\components\\GraphicDemo\\GraphicDemo.tsx",[],"C:\\Repos\\football-react\\src\\Football\\store\\reducers\\teams.ts",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionSimulation\\CompetitionSimulation.tsx",[],"C:\\Repos\\football-react\\src\\Football\\components\\RSSReader\\RSSReader.tsx",[],"C:\\Repos\\football-react\\src\\Football\\components\\SunburstBundle\\SunburstBundle.tsx",["412"],"C:\\Repos\\football-react\\src\\Football\\store\\actions\\actionTypes.ts",[],"C:\\Repos\\football-react\\src\\Football\\utilities\\axios-test.ts",[],"C:\\Repos\\football-react\\src\\Football\\store\\actions\\competitionsActions.ts",["413","414"],"import * as actionTypes from './actionTypes';\r\nimport * as globalActionCreators from './globalActions';\r\nimport { GlobalService } from '../../services/globalService';\r\nimport { CompetitionService } from '../../services/competitionsService';\r\nimport { FootballDispatch } from '../middleware/thunkMiddleware';\r\n\r\nconst globalService = new GlobalService();\r\nconst competitionService = new CompetitionService();\r\n\r\nexport const loadCompetitionListSuccess = (competitionList: any[]) => {\r\n  return {\r\n    type: actionTypes.LOAD_COMPETITION_LIST,\r\n    payload: competitionList,\r\n  };\r\n};\r\n\r\nexport const loadCompetitionTeamsSuccess = (teamList: any[]) => {\r\n  return {\r\n    type: actionTypes.LOAD_COMPETITION_TEAMS,\r\n    payload: teamList,\r\n  };\r\n};\r\n\r\nexport const loadCompetitionTeamEvolutionSuccess = (teamList: any) => {\r\n  return {\r\n    type: actionTypes.LOAD_COMPETITION_TEAM_EVOLUTION,\r\n    payload: teamList,\r\n  };\r\n};\r\n\r\nexport const loadMatchSuccess = (matchInfo: any) => {\r\n  return {\r\n    type: actionTypes.LOAD_MATCH_INFO,\r\n    payload: matchInfo,\r\n  };\r\n};\r\n\r\nexport const loadCompetitionList = () => {\r\n  return async (dispatch: FootballDispatch) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n    const response = await competitionService.loadCompetitionList();\r\n    dispatch(loadCompetitionListSuccess(response.data));\r\n    dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n  };\r\n};\r\n\r\nexport const loadCompetitionTeams = (competitionId: number) => {\r\n  return async (dispatch: FootballDispatch) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n    const response = await competitionService.getCompetitionTeams(\r\n      competitionId\r\n    );\r\n    const teamList = response.data;\r\n    dispatch(loadCompetitionTeamsSuccess(teamList));\r\n    dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n  };\r\n};\r\n\r\nexport const loadCompetitionTeamEvolution = (\r\n  competitionId: number,\r\n  teamId: number\r\n) => {\r\n  return async (dispatch: FootballDispatch) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n\r\n    const response = await competitionService.getCompetitionTeamEvolution(\r\n      competitionId,\r\n      teamId\r\n    );\r\n\r\n    dispatch(\r\n      loadCompetitionTeamEvolutionSuccess({\r\n        teamId: teamId,\r\n        chartData: response.data.clasificationSeasonData,\r\n      })\r\n    );\r\n    dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n  };\r\n};\r\n\r\nexport const loadMatchInfo = (matchId: number) => {\r\n  return async (dispatch: FootballDispatch) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n    const response = await competitionService.getMatchInfo(matchId);\r\n    dispatch(loadMatchSuccess(response.data));\r\n    dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n  };\r\n};\r\n\r\nexport const loadCompetitionSuccess = (competitionData: any) => {\r\n  return {\r\n    type: actionTypes.LOAD_COMPETITION,\r\n    payload: competitionData,\r\n  };\r\n};\r\n\r\nexport const loadCompetition = (id: number) => {\r\n  return async (dispatch: FootballDispatch) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n    const response = await competitionService.getCompetition(id);\r\n    dispatch(loadCompetitionSuccess(response.data));\r\n    dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n  };\r\n};\r\n\r\nexport const loadCompetitionRoundSuccess = (rounds: any) => {\r\n  return {\r\n    type: actionTypes.LOAD_COMPETITION_ROUND,\r\n    payload: rounds,\r\n  };\r\n};\r\n\r\nexport const loadCompetitionRound = (id: number, round: string) => {\r\n  return async (dispatch: FootballDispatch) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n    const response = await competitionService.getCompetitionRound(id, round);\r\n    dispatch(loadCompetitionRoundSuccess(response.data));\r\n    dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n  };\r\n};\r\n\r\nexport const loadCompetitionDraw = (id: number) => {\r\n  return async (dispatch: FootballDispatch) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n    const response = await competitionService.getCompetitionDraw(id);\r\n    dispatch(loadCompetitionDrawSuccess(response.data));\r\n    dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n  };\r\n};\r\n\r\nexport const loadCompetitionDrawSuccess = (draw: any) => {\r\n  return {\r\n    type: actionTypes.LOAD_COMPETITION_DRAW,\r\n    payload: draw,\r\n  };\r\n};\r\n\r\n// apiInstance\r\n// .get('competition/' + props.competitionData.id + '/getDraw/')\r\n// .then((response) => {\r\n//   setDrawState(response.data);\r\n// });\r\n\r\nexport const saveCompetition = (image: any, competitionData: any) => {\r\n  return async (dispatch: FootballDispatch) => {\r\n    dispatch(globalActionCreators.updateLoadingSpinner(true));\r\n\r\n    if (!image) {\r\n      const response = await competitionService.saveCompetitionData(\r\n        competitionData\r\n      );\r\n\r\n      dispatch(saveCompetitionSuccess(competitionData));\r\n      dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n      dispatch(\r\n        globalActionCreators.acToastDashMessage(\r\n          'Competition Info has been saved',\r\n          'success'\r\n        )\r\n      ); //success, warning, error or info\r\n    } else {\r\n      const response = await globalService.saveImage(image);\r\n      const updatedCompetitionData = {\r\n        ...competitionData,\r\n        logo: response.data,\r\n      };\r\n      const resp2 = await competitionService.saveCompetitionData(\r\n        updatedCompetitionData\r\n      );\r\n      dispatch(saveCompetitionSuccess(updatedCompetitionData));\r\n      dispatch(globalActionCreators.updateLoadingSpinner(false));\r\n      dispatch(\r\n        globalActionCreators.acToastDashMessage(\r\n          'Competition Info has been saved',\r\n          'success'\r\n        )\r\n      ); //success, warning, error or info\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveCompetitionSuccess = (competitionData: any) => {\r\n  return {\r\n    type: actionTypes.SAVE_COMPETITION,\r\n    payload: competitionData,\r\n  };\r\n};\r\n","C:\\Repos\\football-react\\src\\Football\\Players\\PlayerStatistics\\PlayerStatistics.tsx",[],"C:\\Repos\\football-react\\src\\Football\\services\\teamsService.ts",[],"C:\\Repos\\football-react\\src\\Football\\components\\Bundle\\Bundle.tsx",["415"],"// import { Product } from 'components/TreeNode/TreeNode';\r\nimport { cluster, curveBundle, hierarchy, lineRadial } from 'd3';\r\nimport mapKeys from 'lodash/mapKeys';\r\nimport React, { Component } from 'react';\r\nimport { backgroundColor } from '../../utilities/colourUtilities';\r\nimport { nestData, packageImports } from '../../utilities/nest';\r\nimport './Bundle.scss';\r\n\r\ninterface BundleProps {\r\n  data: any;\r\n  diameter: number;\r\n  selectProduct: Function;\r\n  selectedProduct?: any;\r\n  subsLimit?: number;\r\n}\r\n\r\ninterface BundleState {\r\n  leavesData: any;\r\n  finalData: any;\r\n  hoverProduct: any;\r\n  textWidth?: number;\r\n  substituteProducts: any;\r\n}\r\n\r\nconst ellipsisDescription = (text: string) => {\r\n  return text.length <= 25 ? text : `${text.substr(0, 25)}...`;\r\n};\r\n\r\nexport class Bundle extends Component<BundleProps, BundleState> {\r\n  state: BundleState = {\r\n    leavesData: null,\r\n    finalData: null,\r\n    hoverProduct: null,\r\n    substituteProducts: null,\r\n  };\r\n\r\n  line: any = null;\r\n  cluster: any = null;\r\n\r\n  componentDidMount() {\r\n    this.createBundleBasic(this.props);\r\n    if (this.props.selectedProduct) {\r\n      this.setSubstituteProducts();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: BundleProps) {\r\n    if (prevProps.subsLimit !== this.props.subsLimit) {\r\n      this.setSubstituteProducts();\r\n    }\r\n    if (\r\n      this.props.selectedProduct &&\r\n      prevProps.selectedProduct !== this.props.selectedProduct\r\n    ) {\r\n      this.setSubstituteProducts();\r\n    }\r\n    if (\r\n      !this.props.selectedProduct &&\r\n      prevProps.selectedProduct !== this.props.selectedProduct\r\n    ) {\r\n      this.setState({\r\n        substituteProducts: null,\r\n        hoverProduct: null,\r\n      });\r\n    }\r\n    if (\r\n      this.props.selectedProduct &&\r\n      prevProps.selectedProduct !== this.props.selectedProduct\r\n    ) {\r\n      this.setState({\r\n        substituteProducts: [\r\n          ...this.props.selectedProduct.substituteProducts.slice(\r\n            0,\r\n            this.props.subsLimit\r\n          ),\r\n        ],\r\n        hoverProduct: null,\r\n      });\r\n    }\r\n    if (\r\n      prevProps.data !== this.props.data ||\r\n      prevProps.diameter !== this.props.diameter ||\r\n      prevProps.subsLimit !== this.props.subsLimit\r\n    ) {\r\n      this.createBundleBasic(this.props);\r\n    }\r\n  }\r\n\r\n  setSubstituteProducts = () => {\r\n    const slicedData = this.props.selectedProduct && [\r\n      ...this.props.selectedProduct.substituteProducts.slice(\r\n        0,\r\n        this.props.subsLimit\r\n      ),\r\n    ];\r\n    this.setState({\r\n      substituteProducts: mapKeys(\r\n        slicedData && slicedData,\r\n        'substituteProductCode'\r\n      ),\r\n      hoverProduct: null,\r\n    });\r\n  };\r\n\r\n  createBundleBasic = (props: BundleProps) => {\r\n    const validNodes = props.data.filter(\r\n      (x: any) =>\r\n        !x.needStateId || (x.needStateId && x.products && x.products.length > 0)\r\n    );\r\n    const nestedData = nestData(validNodes, (treeNode: any) => {\r\n      if (treeNode.products) {\r\n        treeNode.products.forEach((x: any) => {\r\n          x.parentId = treeNode.id;\r\n        });\r\n        treeNode.children = treeNode.products;\r\n      }\r\n    });\r\n\r\n    const root = hierarchy(nestedData);\r\n\r\n    const diameter = props.diameter,\r\n      radius = diameter / 2,\r\n      innerRadius = (root.height - 1) * (radius / root.height);\r\n\r\n    this.cluster = cluster()\r\n      .size([360, innerRadius])\r\n      .separation(() => 1);\r\n\r\n    this.line = lineRadial()\r\n      .curve(curveBundle.beta(0.85))\r\n      .radius((d: any) => {\r\n        return d.y;\r\n      })\r\n      .angle((d: any) => {\r\n        return (d.x / 180) * Math.PI;\r\n      });\r\n\r\n    const leavesList = root.leaves();\r\n\r\n    const finalData = packageImports(leavesList);\r\n\r\n    this.setState({\r\n      leavesData: leavesList,\r\n      finalData: finalData,\r\n      textWidth: radius / root.height - 15,\r\n    });\r\n\r\n    this.cluster(root);\r\n  };\r\n\r\n  mouseovered = (d: any, product: any) => {\r\n    if (!this.props.selectedProduct) {\r\n      this.setState({\r\n        hoverProduct: product,\r\n        substituteProducts: mapKeys(\r\n          product.substituteProducts.slice(0, this.props.subsLimit),\r\n          'substituteProductCode'\r\n        ),\r\n      });\r\n    }\r\n  };\r\n\r\n  mouseouted = () => {\r\n    if (!this.props.selectedProduct) {\r\n      this.setState({ hoverProduct: null, substituteProducts: null });\r\n    }\r\n  };\r\n\r\n  productMouseClick = (d: any, product: any) => {\r\n    d.stopPropagation();\r\n\r\n    this.props.selectProduct(product);\r\n    this.setState({\r\n      hoverProduct: null,\r\n    });\r\n  };\r\n\r\n  setProductElementStyle = (product: any, isProductSelected: boolean) => {\r\n    const style: any = {};\r\n\r\n    // Set the style of the substitutes for the sticked product (if any)\r\n    // Otherwise, set the style of the substitutes of the hovered product (if any)\r\n    if (this.state.substituteProducts) {\r\n      const substituteFound = this.state.substituteProducts[product.code];\r\n      if (substituteFound) {\r\n        style['fill'] = backgroundColor(substituteFound.substituteScore);\r\n      }\r\n    } else if (!isProductSelected) {\r\n      style['fill'] = 'transparent';\r\n    }\r\n\r\n    return style;\r\n  };\r\n\r\n  render() {\r\n    let links = null;\r\n    let texts = null;\r\n\r\n    if (this.state) {\r\n      if (this.state.finalData) {\r\n        let filteredLinks = null;\r\n\r\n        if (this.props.selectedProduct) {\r\n          filteredLinks = this.state.finalData.filter(\r\n            (x: any) => x[0].data.code === this.props.selectedProduct.code\r\n          );\r\n        } else {\r\n          filteredLinks = this.state.hoverProduct\r\n            ? this.state.finalData.filter(\r\n                (x: any) => x[0].data.code === this.state.hoverProduct.code\r\n              )\r\n            : this.state.finalData;\r\n        }\r\n\r\n        filteredLinks =\r\n          this.state.hoverProduct || this.props.selectedProduct\r\n            ? filteredLinks.slice(0, this.props.subsLimit)\r\n            : filteredLinks;\r\n\r\n        links = filteredLinks.map((element: any, i: number) => (\r\n          <path\r\n            key={`productSubstituteLink${i}`}\r\n            className='link'\r\n            d={this.line(element)}\r\n          />\r\n        ));\r\n      }\r\n\r\n      texts =\r\n        this.state.leavesData &&\r\n        this.state.leavesData.map((element: any, i: number) => {\r\n          const isProductSelected =\r\n            (this.state.hoverProduct &&\r\n              !this.props.selectedProduct &&\r\n              this.state.hoverProduct.code === element.data.code) ||\r\n            (this.props.selectedProduct &&\r\n              this.props.selectedProduct.code === element.data.code);\r\n\r\n          const isProductSubstitute =\r\n            (this.state.hoverProduct || this.props.selectedProduct) &&\r\n            this.state.substituteProducts &&\r\n            this.state.substituteProducts[element.data.code];\r\n\r\n          return (\r\n            <g\r\n              key={`productLabelGroup${element.data.code}`}\r\n              className={`productLabelGroup node ${\r\n                isProductSelected ? 'selectedProductNameBox' : ''\r\n              }`}\r\n              onMouseOver={(e) => this.mouseovered(e, element.data)}\r\n              onMouseOut={this.mouseouted}\r\n              onClick={(e) => this.productMouseClick(e, element.data)}\r\n            >\r\n              <rect\r\n                className='productRectangle'\r\n                textAnchor={element.x < 180 ? 'start' : 'end'}\r\n                transform={`rotate(${element.x - 90})translate(${\r\n                  element.y + 8\r\n                },${element.x < 180 ? -7 : -6})`}\r\n                height='12'\r\n                fill='transparent'\r\n                width={this.state.textWidth}\r\n                style={this.setProductElementStyle(\r\n                  element.data,\r\n                  isProductSelected\r\n                )}\r\n              />\r\n              <text\r\n                className={`productText ${\r\n                  isProductSubstitute ? 'subsProduct' : ''\r\n                }`}\r\n                dy='0.31em'\r\n                textAnchor={element.x < 180 ? 'start' : 'end'}\r\n                transform={\r\n                  'rotate(' +\r\n                  (element.x - 90) +\r\n                  ')translate(' +\r\n                  (element.y + 8) +\r\n                  ',0)' +\r\n                  (element.x < 180 ? '' : 'rotate(180)')\r\n                }\r\n                textLength={this.state.textWidth}\r\n              >\r\n                {element.data.description &&\r\n                  ellipsisDescription(element.data.description)}\r\n              </text>\r\n            </g>\r\n          );\r\n        });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {links}\r\n        {texts}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Repos\\football-react\\src\\Football\\utilities\\formatters.ts",[],"C:\\Repos\\football-react\\src\\Football\\components\\TableWithPagination\\TablePaginationActions\\TablePaginationActions.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Teams\\TeamSquad\\SimpleCard\\SimpleCard.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionDraw\\CompetitionDrawMatch\\CompetitionDrawMatch.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionRounds\\MatchList\\MatchList.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionInfo\\EditCompetitionHooks\\EditCompetitionHooks.tsx",[],"C:\\Repos\\football-react\\src\\Football\\store\\middleware\\sagasMiddleware.ts",[],"C:\\Repos\\football-react\\src\\Football\\services\\competitionsService.ts",["416","417","418","419","420","421","422"],"C:\\Repos\\football-react\\src\\Football\\Players\\PlayersOverview\\PlayersOverview.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Players\\PlayerInfo\\PlayerInfo.tsx",["423"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/playersActions';\r\nimport RoleVisibleComponent from '../../components/RoleVisibleComponent/RoleVisibleComponent';\r\nimport { Paper } from '@material-ui/core';\r\nimport Formatters from '../../utilities/formatters';\r\nimport editPlayerComponent from './EditPlayer/EditPlayer';\r\nimport { FootballState } from '../../store';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FootballDispatch } from '../../store/middleware/thunkMiddleware';\r\n\r\ninterface PlayerInfoProps {\r\n  playerData: PlayerData;\r\n  savePlayer: Function;\r\n}\r\n\r\ninterface PlayerData {\r\n  name: string;\r\n  surname: string;\r\n  position: string;\r\n  height: number;\r\n  birthPlace: string;\r\n  birthDate: string;\r\n  picture: any;\r\n}\r\n\r\nconst PlayerInfo = (props: PlayerInfoProps) => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <h1>{t('players.info')}</h1>\r\n      <Paper>\r\n        <div className='row' style={{ padding: '20px' }}>\r\n          <div className='col-sm-5'>\r\n            <div>First Name: {props.playerData.name}</div>\r\n            <div>Last Name: {props.playerData.surname}</div>\r\n            <div>Position: {props.playerData.position}</div>\r\n            <div>Height: {props.playerData.height} m</div>\r\n            <div>Place of Birth: {props.playerData.birthPlace}</div>\r\n            <div>\r\n              Date of Birth: {Formatters.formatDate(props.playerData.birthDate)}\r\n            </div>\r\n            <br />\r\n            <RoleVisibleComponent\r\n              component={editPlayerComponent}\r\n              roles={['Admin']}\r\n              playerData={props.playerData}\r\n              savePlayer={props.savePlayer}\r\n            />\r\n          </div>\r\n          <div className='col-sm-2'>\r\n            <img\r\n              src='/assets/img/pitch-positions.png'\r\n              height='300px'\r\n              width='225'\r\n              alt=''\r\n            />\r\n          </div>\r\n          <div className='col-sm-5 text-right'>\r\n            <img\r\n              src={props.playerData.picture.url}\r\n              height='300px'\r\n              width='300px'\r\n              alt=''\r\n            />\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: FootballState) => {\r\n  return {\r\n    currentPlayer: state.players.currentPlayer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: FootballDispatch) => {\r\n  return {\r\n    savePlayer: (image: any, playerData: any) =>\r\n      dispatch(actionCreators.savePlayerAction(image, playerData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerInfo);\r\n","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamSquad\\TeamSquad.tsx",["424","425"],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionSimulation\\CompetitionSimulationMatch\\CompetitionSimulationMatch.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionDraw\\CompetitionDraw.tsx",["426"],"import React, { useEffect } from 'react';\r\nimport CompetitionDrawMatch from './CompetitionDrawMatch/CompetitionDrawMatch';\r\nimport './CompetitionDraw.css';\r\nimport Formatters from '../../utilities/formatters';\r\nimport { Link } from 'react-router-dom';\r\nimport { FootballState } from '../../store';\r\nimport * as actionCreators from '../../store/actions/competitionsActions';\r\nimport { getCurrentCompetitionDraw } from '../../store/reducers/competitions';\r\nimport { connect } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FootballDispatch } from '../../store/middleware/thunkMiddleware';\r\n\r\nconst CompetitionDraw = (props: any) => {\r\n  const { draw, loadDrawData, competitionData } = props;\r\n\r\n  useEffect(() => {\r\n    loadDrawData(competitionData.id);\r\n  }, []);\r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <h3>{t('competitions.draw.playoff')}</h3>\r\n\r\n      {draw && (\r\n        <div\r\n          className='brackets_container'\r\n          style={{ backgroundColor: '#f0f0f0' }}\r\n        >\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <span>{t('competitions.draw.round16')}</span>\r\n                </th>\r\n                <th>\r\n                  <span>{t('competitions.draw.quarter')}</span>\r\n                </th>\r\n                <th>\r\n                  <span>{t('competitions.draw.semifinals')}</span>\r\n                </th>\r\n                <th>\r\n                  <span>{t('competitions.draw.final')}</span>\r\n                </th>\r\n                <th>\r\n                  <span>{t('competitions.draw.semifinals')}</span>\r\n                </th>\r\n                <th>\r\n                  <span>{t('competitions.draw.quarter')}</span>\r\n                </th>\r\n                <th>\r\n                  <span>{t('competitions.draw.round16')}</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr id='playground'>\r\n                <td className='round_column r_16 '>\r\n                  {draw.eightLeft.map((match: any) => (\r\n                    <CompetitionDrawMatch\r\n                      key={match.matchId}\r\n                      match={match}\r\n                      competitionData={competitionData}\r\n                    ></CompetitionDrawMatch>\r\n                  ))}\r\n                </td>\r\n                <td className='round_column r_8'>\r\n                  {draw.quarterFinalsLeft.map((match: any) => (\r\n                    <CompetitionDrawMatch\r\n                      key={match.matchId}\r\n                      match={match}\r\n                      competitionData={competitionData}\r\n                    ></CompetitionDrawMatch>\r\n                  ))}\r\n                </td>\r\n                <td className='round_column r_4'>\r\n                  <CompetitionDrawMatch\r\n                    match={draw.semifinalsLeft}\r\n                    competitionData={competitionData}\r\n                  ></CompetitionDrawMatch>\r\n                </td>\r\n                <td className='round_column r_2 final'>\r\n                  <div className='winner_team'>\r\n                    <span>\r\n                      WINNER\r\n                      <a href='#'>\r\n                        <img\r\n                          width='25'\r\n                          height='25'\r\n                          src={\r\n                            draw.final.goalsLocal > draw.final.goalsVisitor\r\n                              ? draw.final.localTeam.pictureLogo.url\r\n                              : draw.final.visitorTeam.pictureLogo.url\r\n                          }\r\n                          alt={draw.final.localTeam.name}\r\n                        />\r\n                        <span>\r\n                          {draw.final.goalsLocal > draw.final.goalsVisitor\r\n                            ? draw.final.localTeam.name\r\n                            : draw.final.visitorTeam.name}\r\n                        </span>\r\n                      </a>\r\n                    </span>\r\n                  </div>\r\n                  <div className='mtch_container'>\r\n                    <div className='match_unit'>\r\n                      <div\r\n                        className='m_segment m_top winner first'\r\n                        data-team-id='9'\r\n                      >\r\n                        <span>\r\n                          <a href='#'>\r\n                            <img\r\n                              width='25'\r\n                              height='25'\r\n                              src={draw.final.localTeam.pictureLogo.url}\r\n                              alt={draw.final.localTeam.name}\r\n                            />\r\n                            <span className='truncate'>\r\n                              {draw.final.localTeam.name}\r\n                            </span>\r\n                          </a>\r\n                          <strong>{draw.final.goalsLocal}</strong>\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        className='m_segment m_botm winner second'\r\n                        data-team-id='2'\r\n                      >\r\n                        <span>\r\n                          <a href='#'>\r\n                            <img\r\n                              width='25'\r\n                              height='25'\r\n                              src={draw.final.visitorTeam.pictureLogo.url}\r\n                              alt={draw.final.visitorTeam.name}\r\n                            />\r\n                            <span className='truncate'>\r\n                              {draw.final.visitorTeam.name}\r\n                            </span>\r\n                          </a>\r\n                          <strong>{draw.final.goalsVisitor}</strong>\r\n                        </span>\r\n                      </div>\r\n                      <div className='m_dtls'>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/competitions/competition-details/${competitionData.id}/competition-rounds/match/${draw.final.matchId}`,\r\n                          }}\r\n                        >\r\n                          <span>{Formatters.formatDate(draw.final.date)}</span>\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className='round_column r_4 reversed'>\r\n                  <CompetitionDrawMatch\r\n                    match={draw.semifinalsRight}\r\n                    competitionData={competitionData}\r\n                  ></CompetitionDrawMatch>\r\n                </td>\r\n                <td className='round_column r_8 reversed'>\r\n                  {draw.quarterFinalsRight.map((match: any) => (\r\n                    <CompetitionDrawMatch\r\n                      key={match.matchId}\r\n                      match={match}\r\n                      competitionData={competitionData}\r\n                    ></CompetitionDrawMatch>\r\n                  ))}\r\n                </td>\r\n                <td className='round_column r_16 reversed'>\r\n                  {draw.eightRight.map((match: any) => (\r\n                    <CompetitionDrawMatch\r\n                      key={match.matchId}\r\n                      match={match}\r\n                      competitionData={competitionData}\r\n                    ></CompetitionDrawMatch>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: FootballState) => {\r\n  return {\r\n    draw: getCurrentCompetitionDraw(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: FootballDispatch) => {\r\n  return {\r\n    loadDrawData: (competitionId: number) =>\r\n      dispatch(actionCreators.loadCompetitionDraw(competitionId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompetitionDraw);\r\n","C:\\Repos\\football-react\\src\\Football\\Teams\\TeamStadium\\MyGoogleMaps\\MyGoogleMaps.jsx",[],"C:\\Repos\\football-react\\src\\Football\\utilities\\nest.ts",["427"],"import cloneDeep from 'lodash/cloneDeep';\r\nimport mapKeys from 'lodash/mapKeys';\r\nimport { Product } from '../components/SunburstBundle/products';\r\n// import { CDTNode } from 'services/CDTService';\r\n// import { Product } from 'components/TreeNode/TreeNode';\r\n\r\nexport interface TreeNodeType {\r\n  id: number;\r\n  name: string;\r\n  parentId: number;\r\n  products: Product[];\r\n  needStateId?: number;\r\n  children?: TreeNodeType[];\r\n  value?: number;\r\n}\r\n\r\nexport const nestData = (\r\n  data: any[],\r\n  callback: Function = (treeNode: any) => null\r\n): TreeNodeType => {\r\n  let tree = {} as TreeNodeType;\r\n\r\n  const dataMap = mapKeys(cloneDeep(data), 'id');\r\n\r\n  const addDataItemToTree = (item: any) => {\r\n    const parentElement = dataMap[item.parentId] as TreeNodeType;\r\n    const treeNode = dataMap[item.id] as TreeNodeType;\r\n\r\n    callback(treeNode);\r\n\r\n    if (parentElement) {\r\n      if (!parentElement.children) {\r\n        parentElement.children = [];\r\n      }\r\n\r\n      parentElement.children.push(treeNode);\r\n    } else {\r\n      tree = treeNode;\r\n    }\r\n  };\r\n  data.map(addDataItemToTree);\r\n  return tree;\r\n};\r\n\r\n// Return a list of imports for the given array of nodes.\r\nexport const packageImports = (nodes: any[]) => {\r\n  const map = {} as any,\r\n    imports: any[] = [];\r\n\r\n  // Compute a map from name to node.\r\n  // eslint-disable-next-line prefer-arrow-callback\r\n  nodes.forEach(function (d: any) {\r\n    map[d.data.description] = d;\r\n  });\r\n\r\n  // For each import, construct a link from the source to target node.\r\n  // eslint-disable-next-line prefer-arrow-callback\r\n  nodes.forEach(function (d) {\r\n    d.data.substituteProducts &&\r\n      d.data.substituteProducts.forEach((substituteProduct: any) => {\r\n        const otherNode = nodes.find(\r\n          (x) => x.data.code === substituteProduct.substituteProductCode\r\n        );\r\n        imports.push(map[d.data.description].path(otherNode));\r\n      });\r\n  });\r\n\r\n  return imports;\r\n};\r\n","C:\\Repos\\football-react\\src\\Football\\Home\\Home.tsx",[],"C:\\Repos\\football-react\\src\\Football\\store\\sagas\\teams.ts",["428","429"],"import { put } from 'redux-saga/effects';\r\nimport * as teamActionCreators from '../actions/teamsActions';\r\nimport * as globalActionCreators from '../actions/globalActions';\r\nimport { TeamsService } from '../../services/teamsService';\r\nimport { GlobalService } from '../../services/globalService';\r\nimport {\r\n  LoadTeamSagasAction,\r\n  SaveTeamSagasAction,\r\n} from '../actions/actionTypes';\r\n\r\nconst teamsService = new TeamsService();\r\nconst globalService = new GlobalService();\r\n\r\nexport function* loadTeamsSaga() {\r\n  yield put(globalActionCreators.updateLoadingSpinner(true));\r\n\r\n  try {\r\n    const response = yield teamsService.loadTeamList();\r\n\r\n    yield put(teamActionCreators.loadTeamListSuccess(response.data));\r\n    yield put(globalActionCreators.updateLoadingSpinner(false));\r\n  } catch (error) {\r\n    yield console.log(error.response.data.error);\r\n  }\r\n}\r\n\r\nexport function* loadTeamSaga(action: LoadTeamSagasAction) {\r\n  yield put(globalActionCreators.updateLoadingSpinner(true));\r\n\r\n  try {\r\n    const response = yield teamsService.loadTeam(action.payload);\r\n\r\n    yield put(teamActionCreators.loadTeamSuccess(response.data));\r\n    yield put(globalActionCreators.updateLoadingSpinner(false));\r\n  } catch (error) {\r\n    yield console.log(error.response.data.error);\r\n  }\r\n}\r\n\r\nexport function* saveTeamSaga(action: SaveTeamSagasAction) {\r\n  yield put(globalActionCreators.updateLoadingSpinner(true));\r\n\r\n  try {\r\n    if (!action.payload.image) {\r\n      const response = yield teamsService.saveTeamData(action.payload.teamData);\r\n\r\n      yield put(teamActionCreators.saveTeamSuccess(action.payload.teamData));\r\n      yield put(globalActionCreators.updateLoadingSpinner(false));\r\n      yield put(\r\n        globalActionCreators.acToastDashMessage(\r\n          'Team Info has been saved',\r\n          'success'\r\n        )\r\n      ); //success, warning, error or info\r\n    } else {\r\n      const response = yield globalService.saveImage(action.payload.image);\r\n\r\n      const updatedTeamData = yield {\r\n        ...action.payload.teamData,\r\n        pictureLogo: response.data,\r\n      };\r\n\r\n      const response2 = yield teamsService.saveTeamData(updatedTeamData);\r\n\r\n      yield put(teamActionCreators.saveTeamSuccess(updatedTeamData));\r\n      yield put(globalActionCreators.updateLoadingSpinner(false));\r\n      yield put(\r\n        globalActionCreators.acToastDashMessage(\r\n          'Team Info has been saved',\r\n          'success'\r\n        )\r\n      ); //success, warning, error or info\r\n    }\r\n  } catch (error) {\r\n    yield console.log(error.response.data.error);\r\n  }\r\n}\r\n",[],"C:\\Repos\\football-react\\src\\Football\\Teams\\ComplexForm\\ComplexForm.jsx",[],[],"C:\\Repos\\football-react\\src\\Football\\components\\RoleVisibleComponent\\RoleVisibleComponent.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Players\\PlayerStatistics\\ExpansionPanel\\ExpansionPanel.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Teams\\TeamInfo\\TeamInfo.tsx",["430"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/teamsActions';\r\n// import RoleVisibleComponent from '../../components/RoleVisibleComponent/RoleVisibleComponent';\r\nimport RoleVisibleWrapper from '../../components/RoleVisibleComponent/RoleVisibleWrapper';\r\nimport { Paper } from '@material-ui/core';\r\nimport EditTeamComponent from './EditTeam/EditTeam';\r\nimport { FootballState } from '../../store';\r\nimport { FootballDispatch } from '../../store/middleware/thunkMiddleware';\r\nimport { FootballSagasDispatch } from '../../store/middleware/sagasMiddleware';\r\n\r\nexport interface TeamInfoProps {\r\n  teamData: any;\r\n  saveTeam: Function;\r\n}\r\n\r\nconst TeamInfo = (props: TeamInfoProps) => {\r\n  return (\r\n    <div>\r\n      <h1>Team Basic Info</h1>\r\n      <Paper>\r\n        <div className='row' style={{ padding: '20px' }}>\r\n          <div className='col-sm-7'>\r\n            <div>Name: {props.teamData.name}</div>\r\n            <br />\r\n            {/* <RoleVisibleComponent\r\n              component={editTeamComponent}\r\n              roles={['Admin']}\r\n              teamData={props.teamData}\r\n              saveTeam={ (a, b) => props.saveTeam(a, b) } /> */}\r\n            <RoleVisibleWrapper roles={['Admin']}>\r\n              <EditTeamComponent\r\n                teamData={props.teamData}\r\n                saveTeam={(image: any, teamData: any) =>\r\n                  props.saveTeam(image, teamData)\r\n                }\r\n              />\r\n            </RoleVisibleWrapper>\r\n          </div>\r\n          <div className='col-sm-5 text-right'>\r\n            <img\r\n              src={props.teamData.pictureLogo.url}\r\n              height='300px'\r\n              width='300px'\r\n              alt=''\r\n            />\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: FootballState) => {\r\n  return {\r\n    currentTeam: state.teams.currentTeam,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: FootballSagasDispatch) => {\r\n  return {\r\n    saveTeam: (image: any, teamData: any) =>\r\n      dispatch(actionCreators.saveTeamSagas(image, teamData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamInfo);\r\n","C:\\Repos\\football-react\\src\\Football\\store\\reducers\\competitions.ts",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\Match\\Match.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionRounds\\TableLeague\\TableLeague.tsx",[],"C:\\Repos\\football-react\\src\\Football\\components\\BasicDropzone\\BasicDropzone.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionStatistics\\CompetitionEvolution\\CompetitionEvolution.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Teams\\TeamStadium\\TeamStadium.tsx",[],"C:\\Repos\\football-react\\src\\Football\\components\\RoleVisibleComponent\\RoleVisibleWrapper.tsx",[],"C:\\Repos\\football-react\\src\\Football\\store\\index.ts",[],"C:\\Repos\\football-react\\src\\Football\\store\\reducers.ts",[],"C:\\Repos\\football-react\\src\\Football\\store\\reducers\\players.ts",["431","432"],"C:\\Repos\\football-react\\src\\Football\\Teams\\TeamsOverview\\TeamsOverview.tsx",["433"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/teamsActions';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { FootballState } from '../../store';\r\nimport { FootballDispatch } from '../../store/middleware/thunkMiddleware';\r\nimport { FootballSagasDispatch } from '../../store/middleware/sagasMiddleware';\r\n\r\ninterface TeamsOverviewParams {\r\n  id: string;\r\n}\r\n\r\nexport interface TeamsOverviewProps\r\n  extends RouteComponentProps<TeamsOverviewParams> {\r\n  loadTeams: Function;\r\n  teamList: any[];\r\n}\r\n\r\nclass TeamsOverview extends Component<TeamsOverviewProps> {\r\n  componentDidMount() {\r\n    this.props.loadTeams();\r\n  }\r\n\r\n  render() {\r\n    let teamList = null;\r\n    if (this.props.teamList) {\r\n      teamList = this.props.teamList.map((team) => (\r\n        <div className='col-sm-2 text-center' key={team.id}>\r\n          <Link\r\n            to={{\r\n              pathname: this.props.match.url + '/team-details/' + team.id,\r\n            }}\r\n          >\r\n            <img src={team.pictureLogo.url} width='50' height='50' alt='logo' />\r\n            <div>{team.name}</div>\r\n          </Link>\r\n        </div>\r\n      ));\r\n    }\r\n\r\n    return <div className='row'>{teamList}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: FootballState) => {\r\n  return {\r\n    teamList: state.teams.teamList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: FootballSagasDispatch) => {\r\n  return {\r\n    loadTeams: () => dispatch(actionCreators.loadTeamsSagas()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamsOverview);\r\n","C:\\Repos\\football-react\\src\\Football\\store\\actions\\teamsActions.ts",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionSimulation\\CompetitionSimulationMatch\\CompetitionSimulationMatchEvent\\CompetitionSimulationMatchEvent.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\Match\\MatchPlayers\\MatchPlayerSingle\\MatchPlayerSingle.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Teams\\Teams.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionsOverview\\CompetitionsOverview.tsx",[],"C:\\Repos\\football-react\\src\\Football\\components\\AppBar\\FacebookAuthenticator\\FacebookAuthenticator.tsx",[],"C:\\Repos\\football-react\\src\\Football\\services\\playersService.ts",[],"C:\\Repos\\football-react\\src\\Football\\components\\Countdown\\Countdown.tsx",["434","435","436","437","438","439"],"C:\\Repos\\football-react\\src\\Football\\Competitions\\CompetitionInfo\\CompetitionInfo.tsx",[],"C:\\Repos\\football-react\\src\\Football\\Players\\PlayerDetails\\PlayerDetails.tsx",["440"],"C:\\Repos\\football-react\\src\\Football\\components\\SideMenu\\SideMenu.tsx",[],{"ruleId":"441","severity":1,"message":"442","line":2,"column":24,"nodeType":"443","messageId":"444","endLine":2,"endColumn":34},{"ruleId":"445","severity":1,"message":"446","line":2,"column":24,"nodeType":"443","messageId":"447","endLine":2,"endColumn":34},{"ruleId":"448","severity":1,"message":"449","line":2,"column":31,"nodeType":"450","messageId":"451","endLine":2,"endColumn":34,"suggestions":"452"},{"ruleId":"441","severity":1,"message":"453","line":3,"column":11,"nodeType":"443","messageId":"444","endLine":3,"endColumn":20},{"ruleId":"448","severity":1,"message":"449","line":3,"column":17,"nodeType":"450","messageId":"451","endLine":3,"endColumn":20,"suggestions":"454"},{"ruleId":"441","severity":1,"message":"455","line":4,"column":12,"nodeType":"456","messageId":"457","endLine":4,"endColumn":28},{"ruleId":"441","severity":1,"message":"458","line":4,"column":13,"nodeType":"443","messageId":"444","endLine":4,"endColumn":24},{"ruleId":"448","severity":1,"message":"449","line":4,"column":21,"nodeType":"450","messageId":"451","endLine":4,"endColumn":24,"suggestions":"459"},{"ruleId":"445","severity":1,"message":"460","line":37,"column":14,"nodeType":"443","messageId":"447","endLine":37,"endColumn":18},{"ruleId":"445","severity":1,"message":"461","line":18,"column":13,"nodeType":"443","messageId":"447","endLine":18,"endColumn":14},{"ruleId":"445","severity":1,"message":"460","line":18,"column":16,"nodeType":"443","messageId":"447","endLine":18,"endColumn":20},{"ruleId":"445","severity":1,"message":"462","line":44,"column":31,"nodeType":"443","messageId":"447","endLine":44,"endColumn":44},{"ruleId":"445","severity":1,"message":"463","line":48,"column":33,"nodeType":"443","messageId":"447","endLine":48,"endColumn":39},{"ruleId":"445","severity":1,"message":"464","line":49,"column":38,"nodeType":"443","messageId":"447","endLine":49,"endColumn":46},{"ruleId":"445","severity":1,"message":"465","line":73,"column":13,"nodeType":"443","messageId":"447","endLine":73,"endColumn":27},{"ruleId":"445","severity":1,"message":"465","line":88,"column":13,"nodeType":"443","messageId":"447","endLine":88,"endColumn":27},{"ruleId":"445","severity":1,"message":"466","line":17,"column":17,"nodeType":"443","messageId":"447","endLine":17,"endColumn":29},{"ruleId":"445","severity":1,"message":"460","line":15,"column":14,"nodeType":"443","messageId":"447","endLine":15,"endColumn":18},{"ruleId":"441","severity":1,"message":"467","line":4,"column":15,"nodeType":"443","messageId":"468","endLine":4,"endColumn":26},{"ruleId":"441","severity":1,"message":"455","line":9,"column":3,"nodeType":"469","messageId":"457","endLine":9,"endColumn":18},{"ruleId":"441","severity":1,"message":"470","line":9,"column":12,"nodeType":"443","messageId":"468","endLine":9,"endColumn":17},{"ruleId":"441","severity":1,"message":"455","line":42,"column":3,"nodeType":"469","messageId":"457","endLine":42,"endColumn":10},{"ruleId":"441","severity":1,"message":"455","line":11,"column":26,"nodeType":"456","messageId":"457","endLine":11,"endColumn":59},{"ruleId":"445","severity":1,"message":"471","line":124,"column":23,"nodeType":"443","messageId":"447","endLine":124,"endColumn":24},{"ruleId":"445","severity":1,"message":"472","line":149,"column":13,"nodeType":"443","messageId":"447","endLine":149,"endColumn":21},{"ruleId":"445","severity":1,"message":"473","line":167,"column":13,"nodeType":"443","messageId":"447","endLine":167,"endColumn":18},{"ruleId":"445","severity":1,"message":"474","line":231,"column":50,"nodeType":"443","messageId":"447","endLine":231,"endColumn":59},{"ruleId":"441","severity":1,"message":"455","line":13,"column":3,"nodeType":"469","messageId":"457","endLine":13,"endColumn":65},{"ruleId":"441","severity":1,"message":"475","line":13,"column":48,"nodeType":"443","messageId":"444","endLine":13,"endColumn":64},{"ruleId":"441","severity":1,"message":"455","line":17,"column":3,"nodeType":"469","messageId":"457","endLine":17,"endColumn":46},{"ruleId":"441","severity":1,"message":"476","line":22,"column":5,"nodeType":"443","messageId":"444","endLine":22,"endColumn":25},{"ruleId":"441","severity":1,"message":"455","line":30,"column":3,"nodeType":"469","messageId":"457","endLine":30,"endColumn":58},{"ruleId":"441","severity":1,"message":"455","line":34,"column":3,"nodeType":"469","messageId":"457","endLine":37,"endColumn":4},{"ruleId":"441","severity":1,"message":"455","line":43,"column":3,"nodeType":"469","messageId":"457","endLine":43,"endColumn":45},{"ruleId":"445","severity":1,"message":"460","line":28,"column":14,"nodeType":"443","messageId":"447","endLine":28,"endColumn":18},{"ruleId":"448","severity":1,"message":"449","line":5,"column":12,"nodeType":"450","messageId":"451","endLine":5,"endColumn":15,"suggestions":"477"},{"ruleId":"441","severity":1,"message":"455","line":8,"column":19,"nodeType":"456","messageId":"457","endLine":8,"endColumn":45},{"ruleId":"445","severity":1,"message":"460","line":20,"column":14,"nodeType":"443","messageId":"447","endLine":20,"endColumn":18},{"ruleId":"445","severity":1,"message":"478","line":19,"column":25,"nodeType":"443","messageId":"447","endLine":19,"endColumn":38},{"ruleId":"445","severity":1,"message":"472","line":45,"column":13,"nodeType":"443","messageId":"447","endLine":45,"endColumn":21},{"ruleId":"445","severity":1,"message":"479","line":63,"column":13,"nodeType":"443","messageId":"447","endLine":63,"endColumn":22},{"ruleId":"445","severity":1,"message":"480","line":9,"column":10,"nodeType":"443","messageId":"447","endLine":9,"endColumn":26},{"ruleId":"481","severity":2,"message":"482","line":18,"column":7,"nodeType":"483","messageId":"484","endLine":24,"endColumn":10},{"ruleId":"481","severity":2,"message":"482","line":31,"column":7,"nodeType":"483","messageId":"484","endLine":31,"endColumn":51},{"ruleId":"445","severity":1,"message":"480","line":7,"column":10,"nodeType":"443","messageId":"447","endLine":7,"endColumn":26},{"ruleId":"441","severity":1,"message":"455","line":29,"column":3,"nodeType":"469","messageId":"457","endLine":29,"endColumn":22},{"ruleId":"441","severity":1,"message":"455","line":37,"column":3,"nodeType":"469","messageId":"457","endLine":37,"endColumn":25},{"ruleId":"441","severity":1,"message":"455","line":41,"column":3,"nodeType":"469","messageId":"457","endLine":41,"endColumn":38},{"ruleId":"441","severity":1,"message":"455","line":83,"column":3,"nodeType":"469","messageId":"457","endLine":83,"endColumn":9},{"ruleId":"441","severity":1,"message":"455","line":87,"column":3,"nodeType":"469","messageId":"457","endLine":87,"endColumn":33},{"ruleId":"441","severity":1,"message":"455","line":95,"column":3,"nodeType":"469","messageId":"457","endLine":95,"endColumn":11},{"ruleId":"445","severity":1,"message":"485","line":91,"column":26,"nodeType":"443","messageId":"447","endLine":91,"endColumn":31},"@typescript-eslint/explicit-module-boundary-types","Argument 'store' should be typed with a non-any type.","Identifier","anyTypedArg","@typescript-eslint/no-unused-vars","'store' is defined but never used.","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["486","487"],"Argument 'next' should be typed with a non-any type.",["488","489"],"Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'action' should be typed with a non-any type.",["490","491"],"'i18n' is assigned a value but never used.","'t' is assigned a value but never used.","'response' is defined but never used.","'x' is defined but never used.","'res' is defined but never used.","'playerResponse' is assigned a value but never used.","'theme' is defined but never used.","Argument 'validations' should be typed.","missingArgType","FunctionExpression","Argument 'state' should be typed.","'e' is defined but never used.","'response' is assigned a value but never used.","'resp2' is assigned a value but never used.","'i' is defined but never used.","Argument 'roundNumber' should be typed with a non-any type.","Argument 'competitionData' should be typed with a non-any type.",["492","493"],"'treeNode' is defined but never used.","'response2' is assigned a value but never used.","'FootballDispatch' is defined but never used.","no-case-declarations","Unexpected lexical declaration in case block.","VariableDeclaration","unexpected","'props' is defined but never used.",{"messageId":"494","fix":"495","desc":"496"},{"messageId":"497","fix":"498","desc":"499"},{"messageId":"494","fix":"500","desc":"496"},{"messageId":"497","fix":"501","desc":"499"},{"messageId":"494","fix":"502","desc":"496"},{"messageId":"497","fix":"503","desc":"499"},{"messageId":"494","fix":"504","desc":"496"},{"messageId":"497","fix":"505","desc":"499"},"suggestUnknown",{"range":"506","text":"507"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"506","text":"508"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"509","text":"507"},{"range":"509","text":"508"},{"range":"510","text":"507"},{"range":"510","text":"508"},{"range":"511","text":"507"},{"range":"511","text":"508"},[57,60],"unknown","never",[84,87],[115,118],[127,130]]